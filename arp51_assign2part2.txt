#include <iostream>
using namespace std;

int a1[12],
    a2[12],
    a3[12],
    a4[12];
char reply;
int used1,
    used2,
    used3,
    used4,
    minInt,
    intNum,
    i,
    oneInt;
int* hopPtr;
int* hopPtr1;
int* hopPtr2;
int* hopPtr3;
int* hopPtr4;
int* endPtr;
int* endPtr1;
int* endPtr2;
int* probePtr;
char begA1Str[] = "beginning a1: ";
char cpaA1Str[] = "chkPointA a1: ";
char proA1Str[] = "processed a1: ";
char comA2Str[] = "          a2: ";
char comA3Str[] = "          a3: ";
char comA4Str[] = "          a4: ";
char einStr[]   = "Enter integer #";
char moStr[]    = "Max of ";
char ieStr[]    = " ints entered...";
char eaiStr[]   = "End adding ints? (y or Y = yes, others = no) ";
char dacStr[]   = "Do another case? (n or N = no, others = yes) ";
char dlStr[]    = "================================";
char byeStr[]   = "bye...";

int main()
{
                  //do
begDW1://          {
                      intNum = 0;
                      used1 = 0;
                      used2 = 0;
                      hopPtr1 = a1;
                      hopPtr2 = a2;
                      cout << eaiStr;
                      cin >> reply;
                      cout << endl;

                      goto WTest1;
                      //while (reply != 'y' && reply != 'Y')
begW1://              {
                         ++intNum;
                         cout << einStr;
                         cout << intNum;
                         cout << ':' << ' ';
                         cin >> oneInt;
                         //if ( (intNum & 1) != 0 )
                         if ( (intNum & 1) == 0 ) goto else1;
begI1://                 {
                            *hopPtr1 = oneInt;
                            ++hopPtr1;
                            ++used1;
                         goto endI1;
//                       }
else1://                 else
//                       {
                            *hopPtr2 = oneInt;
                            ++hopPtr2;
                            ++used2;
endI1://                 }
                         //if (intNum == 12)
                         if (intNum != 12) goto else2;
begI2://                 {
                            cout << moStr;
                            cout << 12;
                            cout << ieStr;
                            cout << endl;
                            reply = 'y';
                         goto endI2;
//                       }
else2://                 else
//                       {
                            cout << eaiStr;
                            cin >> reply;
                            cout << endl;
endI2://                 }
//                    }
WTest1:
                      ////if (reply != 'y' && reply != 'Y') goto begW1;
                      if (reply == 'y') goto xitW1;
                      if (reply != 'Y') goto begW1;
xitW1:

                      cout << endl;
                      cout << begA1Str;

                      i = 0;
                      goto FTest1;
                      //for (i = 0; i < used1; ++i)
begF1://              {
                         cout << a1[i] << ' ' << ' ';
                      ++i;
//                    }
FTest1:
                      if (i < used1) goto begF1;

                      cout << endl;
                      cout << comA2Str;

                      i = 0;
                      goto FTest2;
                      //for (i = 0; i < used2; ++i)
begF2://              {
                         cout << a2[i] << ' ' << ' ';
                      ++i;
//                    }
FTest2:
                      if (i < used2) goto begF2;

                      cout << endl;
                      //if (used1 > 0 || used2 > 0)
                      if (used1 > 0) goto begI3;
                      if (used2 <= 0) goto else3;
begI3://              {
                         hopPtr1 = a1;
                         hopPtr2 = a2;
                         hopPtr3 = a3;
                         hopPtr4 = a4;
                         endPtr1 = a1 + used1;
                         endPtr2 = a2 + used2;
                         used3 = 0;
                         used4 = 0;
                         //if (used1 > 0)
                         if (used1 <= 0) goto else4;
begI4://                 {
                            minInt = *hopPtr1;
                         goto endI4;
//                       }
else4://                 else
//                       {
                            minInt = *hopPtr2;
endI4://                 }

                         goto WTest2;
                         //while (hopPtr1 < endPtr1 && hopPtr2 < endPtr2)
begW2://                 {
                            goto WTest3;
                            //while (hopPtr1 < endPtr1)
begW3://                    {
                               oneInt = *hopPtr1;
                               //if (oneInt < minInt)
                               if (oneInt >= minInt) goto endI5;
begI5://                       {
                                  minInt = oneInt;
endI5://                       }
                               //if ( (oneInt & 1) == 0 ) break;
                               if ( (oneInt & 1) == 0 ) goto brkI6;
                               *hopPtr3 = oneInt;
                               ++used3;
                               ++hopPtr1;
                               ++hopPtr3;
//                          }
WTest3:
                            if (hopPtr1 < endPtr1) goto begW3;
brkI6:

                            goto WTest4;
                            //while (hopPtr2 < endPtr2)
begW4://                    {
                               oneInt = *hopPtr2;
                               //if (oneInt < minInt)
                               if (oneInt >= minInt) goto endI7;
begI7://                       {
                                  minInt = oneInt;
endI7://                       }
                               //if ( (oneInt & 1) != 0 ) break;
                               if ( (oneInt & 1) != 0 ) goto brkI8;
                               *hopPtr4 = oneInt;
                               ++used4;
                               ++hopPtr2;
                               ++hopPtr4;
//                          }
WTest4:
                            if (hopPtr2 < endPtr2) goto begW4;
brkI8:

                            //if (hopPtr1 < endPtr1 && hopPtr2 < endPtr2)
                            if (hopPtr1 >= endPtr1) goto endI9;
                            if (hopPtr2 >= endPtr2) goto endI9;
begI9://                    {
                               *hopPtr3 = *hopPtr2;
                               *hopPtr4 = *hopPtr1;
                               ++used3;
                               ++used4;
                               ++hopPtr1;
                               ++hopPtr2;
                               ++hopPtr3;
                               ++hopPtr4;
endI9://                    }
 //                      }
 WTest2:
                         ////if (hopPtr1 < endPtr1 && hopPtr2 < endPtr2) goto begW2;
                         if (hopPtr1 >= endPtr1) goto xitW2;
                         if (hopPtr2 < endPtr2) goto begW2;
xitW2:

                         goto WTest5;
                         //while (hopPtr1 < endPtr1)
begW5://                 {
                            oneInt = *hopPtr1;
                            //if (oneInt < minInt)
                            if (oneInt >= minInt) goto endI10;
begI10://                   {
                               minInt = oneInt;
endI10://                   }
                            //if ( (oneInt & 1) != 0 )
                            if ( (oneInt & 1) == 0 ) goto else11;
begI11://                   {
                               *hopPtr3 = oneInt;
                               ++used3;
                               ++hopPtr3;
                            goto endI11;
//                          }
else11://                   else
//                          {
                               *hopPtr4 = oneInt;
                               ++used4;
                               ++hopPtr4;
endI11://                   }
                            ++hopPtr1;
//                       }
WTest5:
                         if (hopPtr1 < endPtr1) goto begW5;

                         goto WTest6;
                         //while (hopPtr2 < endPtr2)
begW6://                 {
                            oneInt = *hopPtr2;
                            //if (oneInt < minInt)
                            if (oneInt >= minInt) goto endI12;
begI12://                   {
                               minInt = oneInt;
endI12://                   }
                            //if ( (oneInt & 1) != 0 )
                            if ( (oneInt & 1) == 0 ) goto else13;
begI13://                   {
                               *hopPtr3 = oneInt;
                               ++used3;
                               ++hopPtr3;
                            goto endI13;
//                          }
else13://                   else
//                          {
                               *hopPtr4 = oneInt;
                               ++used4;
                               ++hopPtr4;
endI13://                   }
                            ++hopPtr2;
//                       }
WTest6:
                         if (hopPtr2 < endPtr2) goto begW6;

                      goto endI3;
//                    }
else3://              else
//                    {
                         used3 = 0;
                         used4 = 0;
endI3://              }
                      cout << comA3Str;

                      i = 0;
                      goto FTest3;
                      //for (i = 0; i < used3; ++i)
begF3://              {
                         cout << a3[i] << ' ' << ' ';
                      ++i;
//                    }
FTest3:
                      if (i < used3) goto begF3;

                      cout << endl;
                      cout << comA4Str;

                      i = 0;
                      goto FTest4;
                      //for (i = 0; i < used4; ++i)
begF4://              {
                         cout << a4[i] << ' ' << ' ';
                      ++i;
//                    }
FTest4:
                      if (i < used4) goto begF4;

                      cout << endl;

                      //if (used1 > 0 || used2 > 0)
                      if (used1 > 0) goto begI14;
                      if (used2 <= 0) goto endI14;
begI14://             {
                         used1 = 0;
                         used2 = 0;
                         hopPtr = a3;
                         endPtr = a3 + used3;

                         goto WTest7;
                         //while (hopPtr < endPtr)
begW7://                 {
                            oneInt = *hopPtr;

                            probePtr = a1 + used1;
                            goto FTest5;
                            //for (probePtr = a1 + used1; probePtr > a1; --probePtr)
begF5://                    {
                               //if ( *(probePtr - 1) <= oneInt ) break;
                               if ( *(probePtr - 1) <= oneInt ) goto brkI15;
                               *probePtr = *(probePtr - 1);
                            --probePtr;
//                          }
FTest5:
                            if (probePtr > a1) goto begF5;
brkI15:
                            *probePtr = *hopPtr;
                            ++used1;
                            ++hopPtr;
//                       }
WTest7:
                         if (hopPtr < endPtr) goto begW7;

                         hopPtr = a4;
                         endPtr = a4 + used4;

                         goto WTest8;
                         //while (hopPtr < endPtr)
begW8://                 {
                            oneInt = *hopPtr;

                            probePtr = a2 + used2;
                            goto FTest6;
                            //for (probePtr = a2 + used2; probePtr > a2; --probePtr)
begF6://                    {
                               //if ( *(probePtr - 1) <= oneInt ) break;
                               if ( *(probePtr - 1) <= oneInt ) goto brkI16;
                               *probePtr = *(probePtr - 1);
                            --probePtr;
//                          }
FTest6:
                            if (probePtr > a2) goto begF6;
brkI16:
                            *probePtr = *hopPtr;
                            ++used2;
                            ++hopPtr;
//                       }
WTest8:
                         if (hopPtr < endPtr) goto begW8;

                         cout << cpaA1Str;

                         i = 0;
                         goto FTest7;
                         //for (i = 0; i < used1; ++i)
begF7://                 {
                            cout << a1[i] << ' ' << ' ';
                         ++i;
//                       }
FTest7:
                         if (i < used1) goto begF7;

                         cout << endl;
                         cout << comA2Str;

                         i = 0;
                         goto FTest8;
                         //for (i = 0; i < used2; ++i)
begF8://                 {
                            cout << a2[i] << ' ' << ' ';
                         ++i;
//                       }
FTest8:
                         if (i < used2) goto begF8;

                         cout << endl;
                         cout << comA3Str;

                         i = 0;
                         goto FTest9;
                         //for (i = 0; i < used3; ++i)
begF9://                 {
                            cout << a3[i] << ' ' << ' ';
                         ++i;
//                       }
FTest9:
                         if (i < used3) goto begF9;

                         cout << endl;
                         cout << comA4Str;

                         i = 0;
                         goto FTest10;
                         //for (i = 0; i < used4; ++i)
begF10://                {
                            cout << a4[i] << ' ' << ' ';
                         ++i;
//                       }
FTest10:
                         if (i < used4) goto begF10;

                         cout << endl;
                         used3 = 0;
                         used4 = 0;
                         //if ( (minInt & 1) != 0)
                         if ( (minInt & 1) == 0) goto else17;
begI17://                {
                            hopPtr = a3;
                            used3 = used1 + used2;
                         goto endI17;
//                       }
else17://                else
//                       {
                            hopPtr = a4;
                            used4 = used1 + used2;
endI17://                }
                         hopPtr1 = a1;
                         hopPtr2 = a2;
                         endPtr1 = a1 + used1;
                         endPtr2 = a2 + used2;

                         goto WTest9;
                         //while (hopPtr1 < endPtr1 && hopPtr2 < endPtr2)
begW9://                 {
                            //if (*hopPtr1 < *hopPtr2)
                            if (*hopPtr1 >= *hopPtr2) goto else18;
begI18://                   {
                               *hopPtr = *hopPtr1;
                               ++hopPtr1;
                            goto endI18;
//                          }
else18://                   else
//                          {
                               *hopPtr = *hopPtr2;
                               ++hopPtr2;
endI18://                   }
                            ++hopPtr;
//                       }
WTest9:
                         ////if (hopPtr1 < endPtr1 && hopPtr2 < endPtr2) goto begW9;
                         if (hopPtr1 >= endPtr1) goto xitW9;
                         if (hopPtr2 < endPtr2) goto begW9;
xitW9:
                         goto WTest10;
                         //while (hopPtr1 < endPtr1)
begW10://                {
                            *hopPtr = *hopPtr1;
                            ++hopPtr1;
                            ++hopPtr;
//                       }
WTest10:
                         if (hopPtr1 < endPtr1) goto begW10;

                         goto WTest11;
                         //while (hopPtr2 < endPtr2)
begW11://                {
                            *hopPtr = *hopPtr2;
                            ++hopPtr2;
                            ++hopPtr;
//                       }
WTest11:
                         if (hopPtr2 < endPtr2) goto begW11;

endI14://             }

                      cout << proA1Str;

                      i = 0;
                      goto FTest11;
                      //for (i = 0; i < used1; ++i)
begF11://             {
                         cout << a1[i] << ' ' << ' ';
                      ++i;
//                    }
FTest11:
                      if (i < used1) goto begF11;

                      cout << endl;
                      cout << comA2Str;

                      i = 0;
                      goto FTest12;
                      //for (i = 0; i < used2; ++i)
begF12://             {
                         cout << a2[i] << ' ' << ' ';
                      ++i;
//                    }
FTest12:
                      if (i < used2) goto begF12;

                      cout << endl;
                      cout << comA3Str;

                      i = 0;
                      goto FTest13;
                      //for (i = 0; i < used3; ++i)
begF13://             {
                         cout << a3[i] << ' ' << ' ';
                      ++i;
//                    }
FTest13:
                      if (i < used3) goto begF13;

                      cout << endl;
                      cout << comA4Str;

              i = 0;
                      goto FTest14;
                      //for (i = 0; i < used4; ++i)
begF14://             {
                         cout << a4[i] << ' ' << ' ';
                      ++i;
//                    }
FTest14:
                      if (i < used4) goto begF14;

                      cout << endl;

                      cout << endl;
                      cout << dacStr;
                      cin >> reply;
                      cout << endl;
                      cout << endl;
//                 }
DWTest1:
                   ////if (reply != 'n' && reply != 'N') goto begDW1;
                   if (reply == 'n') goto xitDW1;
                   if (reply != 'N') goto begDW1;
xitDW1:

                   cout << dlStr;
                   cout << '\n';
                   cout << byeStr;
                   cout << '\n';
                   cout << dlStr;
                   cout << '\n';

                   return 0;
}
